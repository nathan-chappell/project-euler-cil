.assembly extern mscorlib {}
.assembly PalindromeTester {}

.class public PalindromeTester
{
    .field int32 i
    .field int32 j
    .field string s
    .field public initonly bool isPalindrome

    .method public void .ctor(int32 x)
    {
        .maxstack 20
        // super()
        ldarg.0
        // DEBUG
        call instance void [mscorlib]System.Object::.ctor()
        // s
        ldarg.0
        ldarga x
        call instance string [mscorlib]System.Int32::ToString()
        stfld string PalindromeTester::s
        // j
        ldarg.0
        dup
        ldfld string PalindromeTester::s
        call instance int32 [mscorlib]System.String::get_Length()
        ldc.i4.1
        sub
        stfld int32 PalindromeTester::j

        // ldstr "Testing palindrome: {0}"
        // ldarg x
        // box int32
        // call string [mscorlib]System.String::Format(string, object)
        // call void [mscorlib]System.Console::WriteLine(string)

        ldarg.0
        dup
        call instance bool PalindromeTester::CalculateIsPalindrome()
        stfld bool PalindromeTester::isPalindrome

        // ldarg.0
        // ldfld bool PalindromeTester::isPalindrome
        // brfalse END
        // ldstr "Palindrome Found: {0}"
        // ldarg x
        // call string [mscorlib]System.String::Format(string, object)
        // call void [mscorlib]System.Console::WriteLine(string)

        END:
        ret
    }

    .method private bool ElementTest()
    {
        .maxstack 32
        .locals (char ic, char jc, bool result)

        // ldstr "test: i={0}, j={1}, s={2}"
        // ldarg.0
        // ldfld int32 PalindromeTester::i
        // box int32
        // ldarg.0
        // ldfld int32 PalindromeTester::j
        // box int32
        // ldarg.0
        // ldfld string PalindromeTester::s
        // call string [mscorlib]System.String::Format(string, object, object, object)
        // call void [mscorlib]System.Console::WriteLine(string)

        ldarg.0
        ldfld string PalindromeTester::s
        ldarg.0
        ldfld int32 PalindromeTester::i
        call instance char [mscorlib]System.String::get_Chars(int32)
        dup
        stloc ic

        // s[j]
        ldarg.0
        ldfld string PalindromeTester::s
        ldarg.0
        ldfld int32 PalindromeTester::j
        call instance char [mscorlib]System.String::get_Chars(int32)
        dup 
        stloc jc

        ceq
        stloc result

        // ldstr "test: {0} = {1} ? {2}"
        // ldloc ic
        // box char
        // ldloc jc
        // box char
        // ldloc result
        // box bool
        // call string [mscorlib]System.String::Format(string, object, object, object)
        // call void [mscorlib]System.Console::WriteLine(class System.String)

        ldloc result
        ret
    }

    .method private void Advance()
    {
        .maxstack 5
        // i++
        ldarg.0
        dup
        ldfld int32 PalindromeTester::i
        ldc.i4.1
        add
        stfld int32 PalindromeTester::i

        ldarg.0
        dup
        ldfld int32 PalindromeTester::j
        ldc.i4.1
        sub
        stfld int32 PalindromeTester::j

        ret
    }

    .method private bool ShouldContinue()
    {
        ldarg.0
        ldfld int32 PalindromeTester::i
        ldarg.0
        ldfld int32 PalindromeTester::j
        clt 
        ret
    }

    .method private bool CalculateIsPalindrome()
    {
        // while not IsDone()
        //   Compare
        //   brfalse
        //   Advance
        LOOP_TestPalindrome:
            ldarg.0
            call instance bool PalindromeTester::ElementTest()
            brfalse FAIL
            ldarg.0
            call instance void PalindromeTester::Advance()
            ldarg.0
            call instance bool PalindromeTester::ShouldContinue()
            brtrue LOOP_TestPalindrome

        ldc.i4.1
        ret

        FAIL:
        ldc.i4.0
        ret
    }

    .method public static bool IsPalindrome(int32 x)
    {
        .maxstack 5
        .locals (class PalindromeTester tester)
        // ldloca tester
        // DEBUG
        // ldstr "static IsPalindrome({0})"
        // ldarg x
        // box int32
        // call string [mscorlib]System.String::Format(string, object)
        // call void [mscorlib]System.Console::WriteLine(class System.String)
        // ENDDEBUG
        ldarg x
        newobj instance void PalindromeTester::.ctor(int32)
        // stobj class PalindromeTester
        // ldloc tester
        ldfld bool PalindromeTester::isPalindrome
        ret
    }
}

//.method public static void Main()
//{
//    .entrypoint
//    .maxstack 5
//
//    ldstr "Hello."
//    call void [mscorlib]System.Console::WriteLine(class System.String)
//    ldc.i4 101
//    newobj instance void class PalindromeTester::.ctor(int32)
//    ldfld bool PalindromeTester::IsPalindrome
//    call void [mscorlib]System.Console::WriteLine(bool)
//    ret
//}
